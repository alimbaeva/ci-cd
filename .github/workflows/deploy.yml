name: CI/CD Workflow

on:
  push:
    branches:
      - 'feature/*'  # Триггер для пушей в ветки, начинающиеся с 'feature/'
  pull_request:
    branches:
      - 'main'  # Триггер для PR, направленных в 'main'

jobs:
  # Job для тестирования и валидации
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          npm ci  # Используем npm ci для чистой установки зависимостей

      - name: Run tests
        run: |
          npm run test  # Запускаем тесты

  # Проверка имени ветки, чтобы она начиналась с 'feature/'
  check-branch-name:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/feature/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check branch name
        run: |
          branch_name=$(git symbolic-ref --short HEAD)
          echo "Текущая ветка: $branch_name"
          if [[ ! "$branch_name" =~ ^feature/.* ]]; then
            echo "❌ Неверное имя ветки. Имя ветки должно начинаться с 'feature/'."
            exit 1
          fi
          echo "Имя ветки корректное: $branch_name"

  # Job для деплоя
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to production (пример)
        run: |
          # Замените на ваш реальный команду для деплоя
          echo "Деплой приложения..." 

  # Job для обновления версии и создания тега (опционально)
  release:
    needs: deploy
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Bump version and tag release
        run: |
          npm install standard-version --save-dev  # Устанавливаем стандартный инструмент для версии
          npx standard-version  # Обновляем версию
          git push --follow-tags  # Пушим изменения с тегом
