name: CI/CD Workflow

on:
  push:
    branches:
      - 'feature/*'
  pull_request:
    branches:
      - 'main'

jobs:
  check-branch-name:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check branch name on push
        if: github.event_name == 'push'
        run: |
          branch_name=$(git symbolic-ref --short HEAD)
          echo "Current branch: $branch_name"
          if [[ ! "$branch_name" =~ ^feature/.* ]]; then
            echo "‚ùå Invalid branch name. The branch name must start with 'feature/'"
            exit 1
          fi
          echo "‚úÖ The branch name is correct: $branch_name"

      - name: Check source branch on pull request
        if: github.event_name == 'pull_request'
        run: |
          branch_name="${{ github.head_ref }}"
          echo "üîç Checking the branch: $branch_name"
          if [[ ! "$branch_name" =~ ^feature/.* ]]; then
            echo "‚ùå DENIED: You cannot send PR from test to main."
            exit 1
          fi
          echo "‚úÖ The branch is allowed: $branch_name"

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Deploy to Vercel
        run: |
          npm install -g vercel
          vercel --token ${{ secrets.GUKA_2025 }} --prod --confirm

      - name: Debug GitHub Event
        run: echo "${{ toJson(github) }}"

  release:
    needs: deploy
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Bump version and tag release
        run: |
          npm install standard-version --save-dev
          npx standard-version
          git push --follow-tags

      - name: Debug GitHub Event
        run: echo "${{ toJson(github) }}"
